// -------------------- PET WEIGHT --------------------
model PetWeight {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  createdByDoctor DoctorProfile?  @relation(name: "DoctorPetWeightCreated", fields: [createdByDoctorId, createdByDoctorFirstName, createdByDoctorLastName, createdByDoctorEmail], references: [doctorId, doctorFirstName, doctorLastName, doctorEmail], onDelete: Cascade, onUpdate: Cascade)
  createdByDoctorId         String?      @db.ObjectId
  createdByDoctorFirstName String?
  createdByDoctorLastName String?
  createdByDoctorEmail    String?

  createdByNurse NurseProfile? @relation(name: "NursePetWeightCreated", fields: [createdByNurseId, createdByNurseFirstName, createdByNurseLastName, createdByNurseEmail], references: [nurseId, nurseFirstName, nurseLastName, nurseEmail], onDelete: Cascade, onUpdate: Cascade)
  createdByNurseId         String?      @db.ObjectId
  createdByNurseFirstName String?
  createdByNurseLastName  String?
  createdByNurseEmail     String?

  cretedByPetOwner PetOwnerProfile?  @relation(name: "PetWeightsCreated", fields: [petOwnerId, petOwnerFirstName, petOwnerLastName, petOwnerEmail], references: [petOwnerId, petOwnerFirstName, petOwnerLastName, petOwnerEmail], onDelete: Cascade, onUpdate: Cascade)
  petOwnerId      String?            @db.ObjectId
  petOwnerFirstName String?
  petOwnerLastName  String?
  petOwnerEmail    String?

  pet               Pet               @relation(name: "PetWeight", fields: [petId, petName], references: [petId, petName], onDelete: Cascade, onUpdate: Cascade)
  petId             Int               @unique
  petName           String
  
  weight            Float

  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}